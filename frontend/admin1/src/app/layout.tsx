import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { MeshProvider } from "@meshsdk/react";
import ProtectedRoute from "@/auth/ProtectedRoute";
import dynamic from "next/dynamic";
import { Toaster } from "react-hot-toast";
// import ReduxProvider from "@/store/redux-provider";
// import { wrapper } from "./redux";
// import ClientProvider from "./ClientProvider";

const ReduxProvider = dynamic(() => import("@/store/redux-provider"), {
  ssr: false,
});

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* <MeshProvider> */}
        <Toaster position="top-center" />
        <ReduxProvider>
          <ProtectedRoute>{children}</ProtectedRoute>
        </ReduxProvider>
        {/* </MeshProvider> */}
      </body>
    </html>
  );
}
